#ifndef LINE_H
#define LINE_H

#include <stdio.h>
#include <string.h>

typedef struct {
    char type;             // 'I' = instruction, 'D' = data
    char opcode[10];       // For instructions (e.g., "add", "ld"); empty for plain data
    char registers[3][5];  // Up to 3 registers (e.g., "r1", "r2", "r3")
    int literal;           // Literal value (if any)
    char label[20];        // For an operand that is a label (e.g., ":func")
    int program_counter;   // Memory address for this instruction or data item
    int size;              // 4 bytes for code, 8 bytes for data
    int operand_count;     // Number of operands (if needed)
    char operands[4][10];  // Extra storage for operands (if any)
    int is_label;          // Set to 1 if this line is only a label (and not output)
    int from_call;         // NEW: Set to 1 if this instruction was generated by the "call" macro
} Line;

// Debug print function (for testing)
void print_line(Line *line);

#endif // LINE_H
